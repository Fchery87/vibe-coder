{
  "providers": {
    "openai": {
      "name": "OpenAI",
      "apiBaseUrl": "https://api.openai.com/v1",
      "models": {
        "gpt-4o": {
          "name": "GPT-4o",
          "contextWindow": 128000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.005,
          "outputCostPer1k": 0.015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "code-generation",
            "text-generation",
            "reasoning"
          ],
          "routing": {
            "priority": 1,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1000,
            "dailyBudget": 50
          }
        },
        "gpt-4-turbo": {
          "name": "GPT-4 Turbo",
          "contextWindow": 128000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.01,
          "outputCostPer1k": 0.03,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "reasoning"
          ],
          "strengths": [
            "advanced-reasoning",
            "large-context",
            "code-generation",
            "analysis"
          ],
          "routing": {
            "priority": 1,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1000,
            "dailyBudget": 75
          }
        },
        "gpt-4": {
          "name": "GPT-4",
          "contextWindow": 8192,
          "maxTokens": 2048,
          "inputCostPer1k": 0.03,
          "outputCostPer1k": 0.06,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "reasoning",
            "analysis",
            "complex-tasks"
          ],
          "routing": {
            "priority": 3,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 40,
            "requestsPerHour": 500,
            "dailyBudget": 100
          }
        },
        "gpt-3.5-turbo": {
          "name": "GPT-3.5 Turbo",
          "contextWindow": 16385,
          "maxTokens": 4096,
          "inputCostPer1k": 0.0015,
          "outputCostPer1k": 0.002,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "fast-inference",
            "cost-effective",
            "reliable"
          ],
          "routing": {
            "priority": 4,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 200,
            "requestsPerHour": 5000,
            "dailyBudget": 20
          }
        }
      }
    },
    "anthropic": {
      "name": "Anthropic",
      "apiBaseUrl": "https://api.anthropic.com/v1",
      "models": {
        "claude-3-5-sonnet-20241022": {
          "name": "Claude 3.5 Sonnet",
          "contextWindow": 200000,
          "maxTokens": 8192,
          "inputCostPer1k": 0.003,
          "outputCostPer1k": 0.015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "planning"
          ],
          "strengths": [
            "planning",
            "analysis",
            "long-context"
          ],
          "routing": {
            "priority": 3,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 50,
            "requestsPerHour": 800,
            "dailyBudget": 75
          }
        },
        "claude-3-opus-20240229": {
          "name": "Claude 3 Opus",
          "contextWindow": 200000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.015,
          "outputCostPer1k": 0.075,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "code-generation",
            "conversation",
            "cost-effective"
          ],
          "routing": {
            "priority": 4,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 100,
            "requestsPerHour": 2000,
            "dailyBudget": 30
          }
        },
        "claude-3-sonnet-20240229": {
          "name": "Claude 3 Sonnet",
          "contextWindow": 200000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.003,
          "outputCostPer1k": 0.015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "planning",
            "reasoning"
          ],
          "strengths": [
            "advanced-reasoning",
            "planning",
            "code-generation",
            "analysis"
          ],
          "routing": {
            "priority": 3,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 50,
            "requestsPerHour": 1000,
            "dailyBudget": 50
          }
        },
        "claude-3-haiku-20240307": {
          "name": "Claude 3 Haiku",
          "contextWindow": 200000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.00025,
          "outputCostPer1k": 0.00125,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "fastest-inference",
            "most-cost-effective",
            "quick-responses"
          ],
          "routing": {
            "priority": 4,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 200,
            "requestsPerHour": 5000,
            "dailyBudget": 15
          }
        }
      }
    },
    "google": {
      "name": "Google AI",
      "apiBaseUrl": "https://generativelanguage.googleapis.com/v1",
      "models": {
        "gemini-pro": {
          "name": "Gemini Pro",
          "contextWindow": 32768,
          "maxTokens": 2048,
          "inputCostPer1k": 0.0005,
          "outputCostPer1k": 0.0015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "multimodal"
          ],
          "strengths": [
            "multimodal",
            "cost-effective",
            "fast-inference"
          ],
          "routing": {
            "priority": 5,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 120,
            "requestsPerHour": 3000,
            "dailyBudget": 20
          }
        },
        "gemini-2.5-pro": {
          "name": "Gemini 2.5 Pro",
          "contextWindow": 2097152,
          "maxTokens": 8192,
          "inputCostPer1k": 0.00125,
          "outputCostPer1k": 0.005,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "multimodal",
            "analysis",
            "reasoning"
          ],
          "strengths": [
            "long-context",
            "multimodal",
            "advanced-reasoning",
            "code-generation"
          ],
          "routing": {
            "priority": 2,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1500,
            "dailyBudget": 50
          }
        },
        "gemini-2.5-flash": {
          "name": "Gemini 2.5 Flash",
          "contextWindow": 1048576,
          "maxTokens": 8192,
          "inputCostPer1k": 0.000075,
          "outputCostPer1k": 0.0003,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "multimodal",
            "analysis"
          ],
          "strengths": [
            "fast-inference",
            "cost-effective",
            "multimodal",
            "long-context"
          ],
          "routing": {
            "priority": 6,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 200,
            "requestsPerHour": 5000,
            "dailyBudget": 15
          }
        },
        "gemini-2.5-flash-lite": {
          "name": "Gemini 2.5 Flash Lite",
          "contextWindow": 1048576,
          "maxTokens": 8192,
          "inputCostPer1k": 0.0000375,
          "outputCostPer1k": 0.00015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "multimodal",
            "analysis"
          ],
          "strengths": [
            "fastest-inference",
            "most-cost-effective",
            "multimodal",
            "long-context"
          ],
          "routing": {
            "priority": 7,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 300,
            "requestsPerHour": 8000,
            "dailyBudget": 10
          }
        }
      }
    },
    "ollama": {
      "name": "Ollama (Local)",
      "apiBaseUrl": "http://localhost:11434/v1",
      "models": {
        "llama2": {
          "name": "Llama 2 7B",
          "contextWindow": 4096,
          "maxTokens": 2048,
          "inputCostPer1k": 0,
          "outputCostPer1k": 0,
          "capabilities": [
            "text-generation",
            "conversation"
          ],
          "strengths": [
            "local-inference",
            "privacy",
            "no-api-limits"
          ],
          "routing": {
            "priority": 10,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1000,
            "dailyBudget": 0
          }
        },
        "codellama": {
          "name": "Code Llama",
          "contextWindow": 4096,
          "maxTokens": 2048,
          "inputCostPer1k": 0,
          "outputCostPer1k": 0,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation"
          ],
          "strengths": [
            "code-generation",
            "local-inference",
            "privacy"
          ],
          "routing": {
            "priority": 11,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1000,
            "dailyBudget": 0
          }
        },
        "mistral": {
          "name": "Mistral 7B",
          "contextWindow": 4096,
          "maxTokens": 2048,
          "inputCostPer1k": 0,
          "outputCostPer1k": 0,
          "capabilities": [
            "text-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "reasoning",
            "local-inference",
            "privacy"
          ],
          "routing": {
            "priority": 12,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1000,
            "dailyBudget": 0
          }
        }
      }
    },
    "xai": {
      "name": "xAI",
      "apiBaseUrl": "https://api.x.ai/v1",
      "models": {
        "grok-4-fast-reasoning": {
          "name": "Grok 4 Fast Reasoning",
          "contextWindow": 2000000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.0002,
          "outputCostPer1k": 0.0005,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "reasoning",
            "planning"
          ],
          "strengths": [
            "fastest-reasoning",
            "large-context",
            "advanced-reasoning",
            "cost-effective"
          ],
          "routing": {
            "priority": 1,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 480,
            "requestsPerHour": 4000000,
            "dailyBudget": 50
          }
        },
        "grok-4-fast-non-reasoning": {
          "name": "Grok 4 Fast Non-Reasoning",
          "contextWindow": 2000000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.0002,
          "outputCostPer1k": 0.0005,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "fastest-inference",
            "large-context",
            "cost-effective"
          ],
          "routing": {
            "priority": 2,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 480,
            "requestsPerHour": 4000000,
            "dailyBudget": 50
          }
        },
        "grok-4-0709": {
          "name": "Grok 4 0709",
          "contextWindow": 256000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.003,
          "outputCostPer1k": 0.015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "reasoning",
            "planning"
          ],
          "strengths": [
            "high-quality",
            "advanced-reasoning",
            "large-context"
          ],
          "routing": {
            "priority": 3,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 480,
            "requestsPerHour": 2000000,
            "dailyBudget": 100
          }
        },
        "grok-code-fast-1": {
          "name": "Grok Code Fast 1",
          "contextWindow": 256000,
          "maxTokens": 4096,
          "inputCostPer1k": 0.0002,
          "outputCostPer1k": 0.0015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "reasoning"
          ],
          "strengths": [
            "code-generation",
            "fast-inference",
            "cost-effective"
          ],
          "routing": {
            "priority": 4,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 480,
            "requestsPerHour": 2000000,
            "dailyBudget": 25
          }
        },
        "grok-3": {
          "name": "Grok 3",
          "contextWindow": 131072,
          "maxTokens": 4096,
          "inputCostPer1k": 0.003,
          "outputCostPer1k": 0.015,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "reasoning"
          ],
          "strengths": [
            "high-quality",
            "advanced-reasoning",
            "reliable"
          ],
          "routing": {
            "priority": 5,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 600,
            "requestsPerHour": 1000,
            "dailyBudget": 100
          }
        },
        "grok-3-mini": {
          "name": "Grok 3 Mini",
          "contextWindow": 131072,
          "maxTokens": 4096,
          "inputCostPer1k": 0.0003,
          "outputCostPer1k": 0.0005,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis"
          ],
          "strengths": [
            "fast-inference",
            "cost-effective",
            "efficient"
          ],
          "routing": {
            "priority": 6,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 480,
            "requestsPerHour": 1000,
            "dailyBudget": 20
          }
        },
        "grok-2-vision-1212us-east-1": {
          "name": "Grok 2 Vision US East",
          "contextWindow": 32768,
          "maxTokens": 4096,
          "inputCostPer1k": 0.002,
          "outputCostPer1k": 0.01,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "vision",
            "multimodal"
          ],
          "strengths": [
            "vision-capabilities",
            "multimodal",
            "us-east-performance"
          ],
          "routing": {
            "priority": 7,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 600,
            "requestsPerHour": 1000,
            "dailyBudget": 75
          }
        },
        "grok-2-vision-1212eu-west-1": {
          "name": "Grok 2 Vision EU West",
          "contextWindow": 32768,
          "maxTokens": 4096,
          "inputCostPer1k": 0.002,
          "outputCostPer1k": 0.01,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "vision",
            "multimodal"
          ],
          "strengths": [
            "vision-capabilities",
            "multimodal",
            "eu-west-performance"
          ],
          "routing": {
            "priority": 8,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 50,
            "requestsPerHour": 1000,
            "dailyBudget": 75
          }
        }
      }
    },
    "supernova": {
      "name": "Supernova AI",
      "apiBaseUrl": "https://api.supernova.ai/v1",
      "models": {
        "supernova-fast": {
          "name": "Supernova Fast",
          "contextWindow": 32768,
          "maxTokens": 4096,
          "inputCostPer1k": 0.001,
          "outputCostPer1k": 0.001,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "planning",
            "multimodal"
          ],
          "strengths": [
            "fast-inference",
            "cost-effective",
            "versatile"
          ],
          "routing": {
            "priority": 8,
            "fallback": true,
            "loadBalance": true
          },
          "limits": {
            "requestsPerMinute": 200,
            "requestsPerHour": 5000,
            "dailyBudget": 15
          }
        },
        "supernova-pro": {
          "name": "Supernova Pro",
          "contextWindow": 65536,
          "maxTokens": 8192,
          "inputCostPer1k": 0.004,
          "outputCostPer1k": 0.004,
          "capabilities": [
            "text-generation",
            "code-generation",
            "conversation",
            "analysis",
            "planning",
            "reasoning",
            "multimodal"
          ],
          "strengths": [
            "high-quality",
            "long-context",
            "advanced-reasoning"
          ],
          "routing": {
            "priority": 9,
            "fallback": true,
            "loadBalance": false
          },
          "limits": {
            "requestsPerMinute": 60,
            "requestsPerHour": 1500,
            "dailyBudget": 50
          }
        }
      }
    }
  },
  "routingModes": {
    "manual": {
      "description": "User selects specific model for each request",
      "selection": "user-choice"
    },
    "heuristic": {
      "description": "Automatic selection based on task requirements and model strengths",
      "selection": "capability-matching"
    },
    "cost-aware": {
      "description": "Prioritizes cost efficiency while meeting requirements",
      "selection": "cost-optimization"
    },
    "orchestrated": {
      "description": "Uses specialized models for different workflow stages (Claude for planning, GPT for code, Gemini for UI)",
      "selection": "stage-specialization"
    },
    "single-model": {
      "description": "Uses only one configured provider for all operations",
      "selection": "single-provider"
    }
  },
  "globalLimits": {
    "maxConcurrentRequests": 10,
    "globalDailyBudget": 200,
    "retryAttempts": 3,
    "timeoutSeconds": 30
  }
}